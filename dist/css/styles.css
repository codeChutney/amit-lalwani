@charset "UTF-8";
@import 'https://file.myfontastic.com/DNZuRqZzDWCAfLwPV36W5E/icons.css';
@import 'https://fonts.googleapis.com/css?family=Oswald:300,400,700';
@import 'https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400,700';
@import 'https://fonts.googleapis.com/css?family=Noto+Sans:400,700';
@import 'https://fonts.googleapis.com/css?family=Ubuntu+Condensed';
@import 'https://file.myfontastic.com/DNZuRqZzDWCAfLwPV36W5E/icons.css';
@import 'https://fonts.googleapis.com/css?family=Oswald:300,400,700';
@import 'https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400,700';
@import 'https://fonts.googleapis.com/css?family=Noto+Sans:400,700';
@import 'https://fonts.googleapis.com/css?family=Ubuntu+Condensed';
.slidesjs-pagination, .main-menu, .networks {
  list-style: none;
  padding-left: 0;
  margin: 0; }

/**
  EDgrid es una librerÃ­a CSS para construir layouts con Responsive Web Design
  Importe este archivo en su proyecto para empezar a usarlo
**/
*,
*:before,
*:after {
  box-sizing: border-box; }

body {
  margin: 0;
  font-family: sans-serif; }

img {
  max-width: 100%;
  height: auto; }

a {
  text-decoration: none; }
  a:hover {
    text-decoration: none; }

.ed-container, .resume__container, .portfolio > .container, .reachme, .form {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  max-width: 1400px;
  margin-left: auto;
  margin-right: auto;
  width: 100%; }

.ed-item, .slides, .resume__work, .resume__project, .reachme__item, .form .input-group, .form .textarea-group, .form .form-footer {
  margin: 0;
  padding-left: 1em;
  padding-right: 1em; }

.ed-item {
  width: 100%; }
  .ed-item.ed-container {
    padding-left: 0;
    padding-right: 0; }

.fancybox-wrap {
  position: absolute !important;
  z-index: 1100 !important; }

.fancybox-overlay {
  background: rgba(0, 0, 0, 0.75);
  z-index: 1000; }

.slides {
  width: 100%;
  display: none;
  position: relative;
  z-index: 1; }
  .slides a:hover {
    text-decoration: none; }
  .slides img {
    display: block;
    width: 100%;
    height: auto; }

.slidesjs-navigation {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  height: 50px;
  width: 50px;
  line-height: 50px;
  text-align: center;
  background: rgba(0, 0, 0, 0.5);
  color: #fff;
  font-size: 1.5em;
  border-radius: 50%;
  text-shadow: 2px 2px #070D12, 1px 1px #070D12, 2px 2px #070D12;
  opacity: .5;
  transition: all 0.3s;
  z-index: 2000; }
  .slidesjs-navigation:hover {
    opacity: 1; }
  .slidesjs-navigation::before {
    position: relative;
    top: 3px !important; }

.slidesjs-previous {
  left: 1em; }
  .slidesjs-previous::before {
    left: -3px; }

.slidesjs-next {
  right: 1em; }
  .slidesjs-next::before {
    left: 2px; }

.slidesjs-pagination {
  position: absolute;
  z-index: 1000;
  bottom: 1em;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  right: 2em; }
  .slidesjs-pagination a {
    margin: 0 .5em;
    color: #FFFFFF;
    text-shadow: 2px 2px rgba(0, 0, 0, 0.5), 1px 1px rgba(0, 0, 0, 0.5); }
    .slidesjs-pagination a::before {
      position: relative;
      top: 0 !important; }
  @media screen and (max-width: 639px) {
    .slidesjs-pagination {
      -webkit-transform: scale(0.8);
      -ms-transform: scale(0.8);
      transform: scale(0.8); } }

body {
  background: #FDFDFD;
  font-family: "Ubuntu Condensed", sans-serif;
  color: #444;
  height: 100vh;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  overflow-y: hidden; }

a {
  color: inherit;
  text-decoration: none; }

p, blockquote, li {
  font-size: 1em;
  line-height: 1.5; }

p {
  margin: 0 0 1em 0; }
  p:last-child, p:only-child {
    margin: 0; }

h1, h2, h3, h4, h5, h6 {
  font-family: "Noto Sans", sans-serif;
  font-weight: 700;
  text-transform: normal;
  color: #2b2b2b;
  background: none;
  margin: 0;
  width: 100%; }

h1 {
  font-size: 2em;
  line-height: 1.2; }

h2 {
  font-size: 1.6em; }

h3 {
  font-size: 1.3em; }

h4 {
  font-size: 1em; }

h5 {
  font-size: 0.9em; }

h6 {
  font-size: 0.8em; }

section {
  width: calc(100vw - 160px);
  height: 100vh;
  overflow-y: auto;
  padding-top: 60px;
  position: relative; }
  @media screen and (max-width: 1023px) {
    section {
      width: 100vw;
      left: 160px; } }
  @media screen and (max-width: 1023px) {
    section {
      width: 100vw;
      left: 160px; } }

.main-nav {
  height: calc(100vh - 160px - 5em);
  max-height: 600px; }

.main-menu {
  height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column; }
  .main-menu li {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-flex: auto;
    -ms-flex: auto;
    flex: auto;
    border-bottom: 1px solid rgba(253, 253, 253, 0.1);
    height: auto; }
  .main-menu a {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    width: 100%;
    height: 100%;
    transition: all 0.3s;
    font-size: .75em;
    color: rgba(253, 253, 253, 0.3);
    text-transform: uppercase; }
    .main-menu a span {
      font-size: 2em; }
    .main-menu a:hover, .main-menu a.selected {
      color: rgba(253, 253, 253, 0.75); }

.main-header {
  width: 160px;
  height: 100vh;
  background: #1C262B;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: fixed;
  overflow-y: auto;
  z-index: 100090;
  top: 0; }
  @media screen and (min-width: 1024px) {
    .main-header {
      left: 0; } }

.top__title {
  position: fixed;
  z-index: 1500000000;
  color: #FDFDFD; }
  .top__title h1 {
    color: inherit; }
  @media screen and (max-width: 1023px) {
    .top__title {
      width: 100%;
      background: #070D12;
      left: 0;
      transition: all 0.3s;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      height: 3rem; }
      .top__title a {
        display: block;
        width: 4.5rem;
        line-height: 3rem;
        font-size: 1.5em;
        border-right: 1px solid rgba(253, 253, 253, 0.2);
        text-align: center;
        white-space: nowrap; }
      .top__title h1 {
        font-size: 1.5em;
        line-height: 3rem;
        text-align: left;
        padding-left: 1em; } }
  @media screen and (min-width: 1024px) {
    .top__title {
      position: fixed;
      left: 0;
      background: #2BA163;
      height: 2.25rem;
      top: calc(160px - 1em); }
      .top__title a {
        bottom: 0;
        display: none; }
      .top__title h1 {
        width: 160px;
        font-size: 1em;
        text-align: center;
        line-height: 2.25rem;
        height: 2.25rem; } }

@media screen and (max-width: 1023px) {
  .active > .top__title {
    width: calc(100% - 160px);
    left: 160px; } }

.top {
  background: radial-gradient(#777 1%, #333);
  padding: .5em 0; }
  .top img {
    display: block; }

.bottom {
  margin-top: auto;
  text-align: center;
  color: rgba(253, 253, 253, 0.2);
  font-size: .8em; }
  .bottom span {
    margin-left: 3px; }

.home {
  background: url(../img/bg.jpg) center center/cover fixed no-repeat;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end; }
  .home::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: rgba(28, 38, 43, 0.75); }
  .home__message {
    position: relative;
    z-index: 50;
    margin-bottom: 5em;
    color: #FDFDFD; }
  .home__span, .home__pro {
    text-align: center;
    display: block;
    font-size: 1.3em;
    color: inherit; }
  .home__name {
    text-align: center;
    font-size: 3em;
    margin: 0;
    line-height: 1;
    color: inherit; }
  .home__pro {
    padding-top: 1em; }

body {
  background: #EBF0DF; }

.resume__work, .resume__project {
  width: 100%; }
  @media screen and (min-width: 1024px) {
    .resume__work, .resume__project {
      width: 50%; } }

.resume__work-content {
  margin-bottom: 1em; }
  .resume__work-content span {
    display: inline-block;
    width: 2.5rem;
    height: 2.5rem;
    line-height: 2.5rem;
    background: #2BA163;
    margin-right: 1.25rem;
    color: #FDFDFD;
    text-align: center;
    border-radius: 50%; }
  .resume__work-content p, .resume__work-content ul {
    margin-left: 3.75rem; }
  .resume__work-content ul {
    margin-top: 0;
    padding-left: .7em; }

.resume__project h3 {
  position: relative;
  width: 80%;
  max-width: 250px;
  margin: 2em auto 1em;
  line-height: 1.8em;
  background: #2BA163;
  color: #FDFDFD;
  text-transform: uppercase;
  text-align: center;
  margin-bottom: 2em; }
  .resume__project h3:first-of-type {
    margin: 0em auto 3em; }
  @media screen and (max-width: 1023px) {
    .resume__project h3 {
      margin-top: 2em; } }
  .resume__project h3::before, .resume__project h3::after {
    content: "";
    position: absolute;
    height: 100%;
    width: 1.5em;
    background: #20794a;
    z-index: -1;
    border: 5px solid transparent; }
  .resume__project h3::before {
    left: -1.3em;
    top: -15%;
    border-right-color: #165132;
    border-radius: 3px 0 0 3px; }
  .resume__project h3::after {
    right: calc(-1.3em + 1px);
    top: 15%;
    border-left-color: #165132;
    border-radius: 0 3px 3px 0; }

.resume__project-content {
  border: 2px solid #2BA163;
  margin-bottom: 3em;
  padding: 2em 1em 0em;
  background: rgba(253, 253, 253, 0.75);
  position: relative;
  cursor: pointer; }
  .resume__project-content h4 {
    margin-bottom: .5em;
    text-align: center;
    position: absolute;
    top: 0;
    -webkit-transform: translateY(0) translateX(-50%);
    -ms-transform: translateY(0) translateX(-50%);
    transform: translateY(0) translateX(-50%);
    background: #2BA163;
    width: 100%;
    line-height: 2em;
    left: 50%;
    color: #FDFDFD;
    transition: all 0.3s; }
    @media screen and (max-width: 364px) {
      .resume__project-content h4 {
        font-size: .8em;
        line-height: 2.55; } }
    .resume__project-content h4 span {
      position: absolute;
      right: .5em; }
      .resume__project-content h4 span::before {
        top: 0; }
  .resume__project-content .text {
    margin-bottom: .3em;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex; }
    .resume__project-content .text:first-of-type {
      margin-top: .5em; }
    .resume__project-content .text h6 {
      -webkit-flex: 0 0 100px;
      -ms-flex: 0 0 100px;
      flex: 0 0 100px;
      padding-top: 4px;
      line-height: 1;
      text-align: right; }
      @media screen and (min-width: 640px) {
        .resume__project-content .text h6 {
          width: 80px; } }
    .resume__project-content .text p {
      -webkit-flex: auto;
      -ms-flex: auto;
      flex: auto;
      padding: 0;
      margin-left: .5em; }
  .resume__project-content h5 {
    padding-left: 3px; }
  .resume__project-content ul {
    margin-top: .5em; }

.content {
  display: none; }

.portfolio {
  background: #60D7A9; }
  .portfolio > .container {
    width: 60% !important;
    max-width: 1000px !important; }
  .portfolio__gallery {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
    margin-left: -1.25em;
    margin-right: -1.25em; }
    body {
      overflow-x: hidden; }
    .portfolio__gallery > .portfolio__item {
      width: calc(100% - 2.5em);
      margin: 1.25em; }
    @media screen and (min-width: 640px) {
      .portfolio__gallery > .portfolio__item {
        width: calc(50% - 2.5em); } }
    @media screen and (min-width: 1024px) {
      .portfolio__gallery > .portfolio__item {
        width: calc(33.33333% - 2.5em); } }
  .portfolio__item:nth-child(1) {
    background: #C5D2D8; }
  .portfolio__item:nth-child(2) {
    background: #EAE5D1; }
  .portfolio__item:nth-child(3) {
    background: #B7BFC2; }
  .portfolio__item:nth-child(4) {
    background: #FAD4C7; }
  .portfolio__item:nth-child(5) {
    background: #C5E1E5; }
  .portfolio__item:nth-child(6) {
    background: #DBDAE2; }
  .portfolio__item:nth-child(7) {
    background: #E2D9DA; }
  .portfolio__item:nth-child(8) {
    background: #D9D9D9; }
  .portfolio__item:nth-child(9) {
    background: #E5E4C6; }
  .portfolio__item a {
    display: block;
    padding: 2em;
    overflow: hidden; }
  .portfolio__item.box-shadow img {
    box-shadow: 2px 2px #D5D4C2, 1px 1px #D5D4C2, 2px 2px #D5D4C2, 3px 3px #D5D4C2, 4px 4px #D5D4C2, 5px 5px #D5D4C2, 6px 6px #D5D4C2, 7px 7px #D5D4C2, 8px 8px #D5D4C2, 9px 9px #D5D4C2, 10px 10px #D5D4C2, 11px 11px #D5D4C2, 12px 12px #D5D4C2, 13px 13px #D5D4C2, 14px 14px #D5D4C2, 15px 15px #D5D4C2, 16px 16px #D5D4C2, 17px 17px #D5D4C2, 18px 18px #D5D4C2, 19px 19px #D5D4C2, 20px 20px #D5D4C2, 21px 21px #D5D4C2, 22px 22px #D5D4C2, 23px 23px #D5D4C2, 24px 24px #D5D4C2, 25px 25px #D5D4C2, 26px 26px #D5D4C2, 27px 27px #D5D4C2, 28px 28px #D5D4C2, 29px 29px #D5D4C2, 30px 30px #D5D4C2, 31px 31px #D5D4C2, 32px 32px #D5D4C2, 33px 33px #D5D4C2, 34px 34px #D5D4C2, 35px 35px #D5D4C2, 36px 36px #D5D4C2, 37px 37px #D5D4C2, 38px 38px #D5D4C2, 39px 39px #D5D4C2, 40px 40px #D5D4C2, 41px 41px #D5D4C2, 42px 42px #D5D4C2, 43px 43px #D5D4C2, 44px 44px #D5D4C2, 45px 45px #D5D4C2, 46px 46px #D5D4C2, 47px 47px #D5D4C2, 48px 48px #D5D4C2, 49px 49px #D5D4C2, 50px 50px #D5D4C2; }

.item-footer {
  background: #FDFDFD;
  height: 100px;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }
  .item-footer h3 {
    text-align: center; }

.contact {
  background: url(../img/map2.png) center/cover no-repeat fixed;
  color: #FDFDFD; }

.section-title {
  display: table;
  position: relative;
  margin: 0 auto;
  z-index: 1; }
  .section-title h3 {
    position: relative;
    z-index: 1;
    background: #2BA163;
    line-height: 2em;
    padding: 0 1em;
    color: inherit;
    font-size: 1em; }

.flag-left, .flag-right {
  position: absolute;
  width: 30px;
  height: 100%;
  background: #20794a;
  border: 5px solid transparent; }

.flag-left {
  left: -25px;
  top: -5px;
  border-right-color: #165132;
  border-radius: 3px 0 0 3px; }

.flag-right {
  right: -25px;
  top: 5px;
  border-left-color: #165132;
  border-radius: 0 3px 3px 0; }

.networks {
  width: 80%;
  max-width: 600px;
  margin: 2em auto;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-around;
  -ms-flex-pack: distribute;
  justify-content: space-around; }
  .networks a {
    display: block;
    line-height: 60px;
    width: 65px;
    text-align: center;
    font-size: 2em;
    border: 2px solid #FDFDFD;
    border-radius: 50%;
    transition: all 0.3s; }
    @media screen and (max-width: 639px) {
      .networks a {
        -webkit-transform: scale(0.7);
        -ms-transform: scale(0.7);
        transform: scale(0.7); } }
    .networks a.icon-facebook:hover {
      border-color: #3b5998;
      background: #3b5998; }
    .networks a.icon-twitter:hover {
      border-color: #55acee;
      background: #55acee; }
    .networks a.icon-instagram:hover {
      border-color: #2089b5;
      background: #2089b5; }
    .networks a.icon-linkedin:hover {
      border-color: #007bb5;
      background: #007bb5; }
    .networks a.icon-github:hover {
      border-color: #0D2636;
      background: #0D2636; }

.reachme {
  margin: 2em auto;
  width: 90% !important;
  max-width: 960px; }
  .reachme p {
    margin: 0; }
  .reachme__item {
    width: 50%;
    height: 80px;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center; }
    @media screen and (min-width: 640px) {
      .reachme__item {
        width: 25%; } }
    .reachme__item [class^="icon"] {
      margin: 0;
      padding: 0;
      font-size: 2.5em;
      -webkit-flex: 0 0 20%;
      -ms-flex: 0 0 20%;
      flex: 0 0 20%; }
    .reachme__item .text {
      -webkit-flex: 0 0 80%;
      -ms-flex: 0 0 80%;
      flex: 0 0 80%;
      padding-left: .5em; }

.form {
  width: 90%;
  max-width: 1000px;
  margin: 2em auto; }
  .form .input-group {
    width: 100%;
    margin-bottom: 1em; }
    @media screen and (min-width: 640px) {
      .form .input-group {
        width: 50%; } }
  .form .textarea-group, .form .input-group {
    position: relative; }
    .form .textarea-group > .span-error, .form .input-group > .span-error {
      display: none; }
  .form .textarea-group, .form .form-footer {
    width: 100%;
    margin-bottom: 1em; }
  .form label {
    display: block;
    text-transform: uppercase; }
  .form input, .form textarea {
    width: 100%;
    font-family: "Ubuntu Condensed", sans-serif;
    font-size: 1em;
    border: 1px solid rgba(253, 253, 253, 0.75);
    background: transparent;
    color: #FDFDFD; }
    .form input:focus, .form textarea:focus {
      border: 1px solid #FDFDFD;
      background: rgba(7, 13, 18, 0.05);
      outline: none; }
  .form input {
    line-height: 2em;
    padding: 0 5px;
    outline: transparent solid 1px !important; }
  .form textarea {
    resize: none;
    height: 140px;
    padding: 5px; }
  .form-footer {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center; }
    .form-footer button {
      padding: 0 1em;
      line-height: 2.5em;
      text-transform: uppercase;
      border: 1px solid #FDFDFD;
      background: none;
      color: #FDFDFD;
      transition: all 0.3s; }
      .form-footer button:hover {
        background: #2BA163;
        border-color: transparent; }
      .form-footer button.disabled {
        background: #C5D2D8;
        border: none; }
        .form-footer button.disabled:hover {
          background: #C5D2D8; }
      .form-footer button:active {
        -webkit-transform: scale(0.95);
        -ms-transform: scale(0.95);
        transform: scale(0.95); }

.span-error {
  display: block;
  position: absolute;
  left: 20px;
  top: calc(100% + 10px) !important;
  text-transform: uppercase;
  color: #FDFDFD;
  line-height: 2em;
  padding: 0 .5em;
  background: #990000;
  z-index: 100;
  border-radius: 3px;
  font-size: .8em; }
  .span-error::before {
    content: '';
    display: block;
    height: 0;
    width: 0;
    position: absolute;
    background: none;
    left: 0;
    top: -10px;
    z-index: -1;
    border-bottom: #990000 solid 20px;
    border-left: transparent solid 20px;
    border-right: transparent solid 20px; }

.textarea-group > .span-error {
  top: calc(100% + 7px) !important; }

.table-container {
  overflow-x: auto;
  margin-bottom: 2em; }
  .table-container .table-rwd {
    font-size: .85em;
    border: 1px solid rgba(181, 213, 144, 0.5);
    color: #666;
    border-collapse: collapse;
    min-width: 400px;
    margin-left: auto;
    margin-right: auto; }
    .table-container .table-rwd td, .table-container .table-rwd th {
      padding: .8em;
      border-bottom: 1px solid rgba(181, 213, 144, 0.5); }
    .table-container .table-rwd th {
      background: #2BA163;
      color: #fff;
      font-weight: normal;
      text-align: center;
      text-transform: uppercase; }
    .table-container .table-rwd td {
      text-align: center; }
    .table-container .table-rwd tr:hover {
      background: rgba(181, 213, 144, 0.2); }
    .table-container .table-rwd tr td:nth-child(2n) {
      background: rgba(181, 213, 144, 0.2); }

[class^="icon-"]::before {
  position: relative;
  top: 3px; }

body {
  overflow-x: hidden;
  position: relative;
  width: 100vw;
  height: 100vh; }
  @media screen and (max-width: 1023px) {
    body {
      left: -160px;
      transition: all 0.3s; } }
  @media screen and (min-width: 1024px) {
    body {
      padding-left: 160px; } }
  body.active {
    left: 0; }

.title_page {
  display: block;
  text-align: center;
  font-size: 1.5em;
  margin-bottom: 2em; }
  .title_page span {
    font-size: 2em; }

.white h2 {
  color: #FDFDFD; }

.white span {
  color: #FDFDFD; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
