@charset "UTF-8";
@import 'https://file.myfontastic.com/DNZuRqZzDWCAfLwPV36W5E/icons.css';
@import 'https://fonts.googleapis.com/css?family=Oswald:300,400,700';
@import 'https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400,700';
@import 'https://fonts.googleapis.com/css?family=Noto+Sans:400,700';
@import 'https://fonts.googleapis.com/css?family=Ubuntu+Condensed';
@import 'https://file.myfontastic.com/DNZuRqZzDWCAfLwPV36W5E/icons.css';
@import 'https://fonts.googleapis.com/css?family=Oswald:300,400,700';
@import 'https://fonts.googleapis.com/css?family=Roboto+Condensed:300,400,700';
@import 'https://fonts.googleapis.com/css?family=Noto+Sans:400,700';
@import 'https://fonts.googleapis.com/css?family=Ubuntu+Condensed';
.slidesjs-pagination, .main-menu {
  list-style: none;
  padding-left: 0;
  margin: 0; }

/**
  EDgrid es una librerÃ­a CSS para construir layouts con Responsive Web Design
  Importe este archivo en su proyecto para empezar a usarlo
**/
*,
*:before,
*:after {
  box-sizing: border-box; }

body {
  margin: 0;
  font-family: sans-serif; }

img {
  max-width: 100%;
  height: auto; }

a {
  text-decoration: none; }
  a:hover {
    text-decoration: none; }

.ed-container, .resume__container {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  width: 85%; }

.ed-item, .slides, .resume__history, .resume__skills {
  margin: 0;
  padding-left: 1em;
  padding-right: 1em; }

.ed-item {
  width: 100%; }
  .ed-item.ed-container {
    padding-left: 0;
    padding-right: 0; }

.fancybox-wrap {
  position: absolute !important;
  z-index: 1100 !important; }

.fancybox-overlay {
  background: rgba(0, 0, 0, 0.75);
  z-index: 1000; }

.slides {
  width: 100%;
  display: none;
  position: relative;
  z-index: 1; }
  .slides a:hover {
    text-decoration: none; }
  .slides img {
    display: block;
    width: 100%;
    height: auto; }

.slidesjs-navigation {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  height: 50px;
  width: 50px;
  line-height: 50px;
  text-align: center;
  background: rgba(0, 0, 0, 0.5);
  color: #fff;
  font-size: 1.5em;
  border-radius: 50%;
  text-shadow: 2px 2px #070D12, 1px 1px #070D12, 2px 2px #070D12;
  opacity: .5;
  transition: all 0.3s;
  z-index: 2000; }
  .slidesjs-navigation:hover {
    opacity: 1; }
  .slidesjs-navigation::before {
    position: relative;
    top: 3px !important; }

.slidesjs-previous {
  left: 1em; }
  .slidesjs-previous::before {
    left: -3px; }

.slidesjs-next {
  right: 1em; }
  .slidesjs-next::before {
    left: 2px; }

.slidesjs-pagination {
  position: absolute;
  z-index: 1000;
  bottom: 1em;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  right: 2em; }
  .slidesjs-pagination a {
    margin: 0 .5em;
    color: #FFFFFF;
    text-shadow: 2px 2px rgba(0, 0, 0, 0.5), 1px 1px rgba(0, 0, 0, 0.5); }
    .slidesjs-pagination a::before {
      position: relative;
      top: 0 !important; }
  @media screen and (max-width: 639px) {
    .slidesjs-pagination {
      -webkit-transform: scale(0.8);
      -ms-transform: scale(0.8);
      transform: scale(0.8); } }

body {
  background: #FDFDFD;
  font-family: "Ubuntu Condensed", sans-serif;
  color: #444;
  height: 100vh;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column; }

a {
  color: inherit;
  text-decoration: none; }

p, blockquote, li {
  font-size: 1em;
  line-height: 1.5; }

p {
  margin: 0 0 1em 0; }
  p:last-child, p:only-child {
    margin: 0; }

h1, h2, h3, h4, h5, h6 {
  font-family: "Noto Sans", sans-serif;
  font-weight: 700;
  text-transform: normal;
  color: #2b2b2b;
  background: none;
  margin: 0;
  width: 100%; }

h1 {
  font-size: 2em;
  line-height: 1.2; }

h2 {
  font-size: 1.6em; }

h3 {
  font-size: 1.3em; }

h4 {
  font-size: 1em; }

h5 {
  font-size: 0.9em; }

h6 {
  font-size: 0.8em; }

section {
  width: calc(100vw - 160px);
  height: 100vh;
  overflow-y: auto;
  padding-top: 60px;
  position: relative; }
  @media screen and (max-width: 1023px) {
    section {
      width: 100vw;
      left: 160px; } }
  @media screen and (max-width: 1023px) {
    section {
      width: 100vw;
      left: 160px; } }

.main-nav {
  height: calc(100vh - 160px - 5em);
  max-height: 600px; }

.main-menu {
  height: 100%;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column; }
  .main-menu li {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-flex: auto;
    -ms-flex: auto;
    flex: auto;
    border-bottom: 1px solid rgba(253, 253, 253, 0.1);
    height: auto; }
  .main-menu a {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    width: 100%;
    height: 100%;
    transition: all 0.3s;
    font-size: .75em;
    color: rgba(253, 253, 253, 0.3);
    text-transform: uppercase; }
    .main-menu a span {
      font-size: 2em; }
    .main-menu a:hover, .main-menu a.selected {
      color: rgba(253, 253, 253, 0.75); }

.main-header {
  width: 160px;
  height: 100vh;
  background: #1C262B;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  position: fixed;
  overflow-y: auto;
  z-index: 90;
  top: 0; }
  @media screen and (min-width: 1024px) {
    .main-header {
      left: 0; } }

.top__title {
  position: fixed;
  z-index: 100;
  color: #FDFDFD; }
  .top__title h1 {
    color: inherit; }
  @media screen and (max-width: 1023px) {
    .top__title {
      width: 100%;
      background: #070D12;
      left: 0;
      transition: all 0.3s;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      height: 3rem; }
      .top__title a {
        display: block;
        width: 4.5rem;
        line-height: 3rem;
        font-size: 1.5em;
        border-right: 1px solid rgba(253, 253, 253, 0.2);
        text-align: center;
        white-space: nowrap; }
      .top__title h1 {
        font-size: 1.5em;
        line-height: 3rem;
        text-align: left;
        padding-left: 1em; } }
  @media screen and (min-width: 1024px) {
    .top__title {
      position: fixed;
      left: 0;
      background: #8ACB82;
      height: 2.25rem;
      top: calc(160px - 1em); }
      .top__title a {
        bottom: 0;
        display: none; }
      .top__title h1 {
        width: 160px;
        font-size: 1em;
        text-align: center;
        line-height: 2.25rem;
        height: 2.25rem; } }

@media screen and (max-width: 1023px) {
  .active > .top__title {
    width: calc(100% - 160px);
    left: 160px; } }

.top {
  background: radial-gradient(#777 1%, #333);
  padding: .5em 0; }
  .top img {
    display: block; }

.bottom {
  margin-top: auto;
  text-align: center;
  color: rgba(253, 253, 253, 0.2);
  font-size: .8em; }
  .bottom span {
    margin-left: 3px; }

.home {
  background: url(../img/bg.jpg) center center/cover no-repeat;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end; }
  .home::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background: rgba(28, 38, 43, 0.75); }
  .home__message {
    position: relative;
    z-index: 50;
    margin-bottom: 5em;
    color: #FDFDFD; }
  .home__span, .home__pro {
    text-align: center;
    display: block;
    font-size: 1.3em;
    color: inherit; }
  .home__name {
    text-align: center;
    font-size: 3em;
    margin: 0;
    line-height: 1;
    color: inherit; }
  .home__pro {
    padding-top: 1em; }

body {
  background: #EBF0DF; }

.resume {
  background: none;
  padding-bottom: 3em;
  position: relative; }
  .resume__container {
    margin-top: 3em; }
  .resume__history, .resume__skills {
    width: 100%; }
    @media screen and (min-width: 640px) {
      .resume__history, .resume__skills {
        width: 50%; } }
  .resume__history {
    padding-left: 2.5em;
    margin-top: 2em;
    border-left: 3px solid #FDFDFD; }
    .resume__history:first-child {
      margin-top: 0; }
  @media screen and (max-width: 639px) {
    .resume__skills {
      margin-top: 2em; } }
  .resume__skills__title {
    position: relative;
    color: #FDFDFD;
    background: #8ACB82;
    width: 75%;
    max-width: 300px;
    margin: auto;
    height: 30px;
    line-height: 30px;
    font-size: 1em;
    text-transform: uppercase;
    text-align: center; }
    @media screen and (min-width: 1024px) {
      .resume__skills__title {
        -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        transform: translateY(-50%); } }
    .resume__skills__title::before, .resume__skills__title::after {
      content: '';
      position: absolute;
      display: block;
      height: 100%;
      width: 30px;
      background: #57b54c;
      z-index: -1;
      border: 5px solid transparent; }
    .resume__skills__title::before {
      left: calc((30px - 5px) * -1);
      top: -5px;
      border-right-color: #3d7f35;
      border-radius: 3px 0 0 3px; }
    .resume__skills__title::after {
      right: calc((30px - 5px) * -1);
      bottom: -5px;
      border-left-color: #3d7f35;
      border-radius: 0 3px 3px 0; }
  .resume__title {
    position: relative;
    margin-top: 2em; }
    .resume__title:nth-of-type(1) {
      margin-top: 0; }
    .resume__title > span, .resume__title > h3 {
      display: inline-block; }
    .resume__title > span {
      position: absolute;
      left: -3rem;
      width: 3rem;
      height: 3rem;
      line-height: 3rem;
      background: #8ACB82;
      color: #FDFDFD;
      font-size: 1.5em;
      text-align: center;
      -webkit-transform: translate(-35%, -25%);
      -ms-transform: translate(-35%, -25%);
      transform: translate(-35%, -25%);
      border-radius: 50%; }
    .resume__title > h3 {
      text-transform: uppercase; }
  .resume__content {
    margin-top: 2em; }
    .resume__content h4 {
      font-size: 1em;
      text-transform: uppercase; }
    .resume__content h5 {
      color: rgba(28, 38, 43, 0.45);
      margin: .5em 0 1em; }

.date {
  position: relative;
  margin-bottom: 1.5em; }
  .date p {
    background: #8ACB82;
    display: table;
    text-transform: uppercase;
    line-height: 20px;
    height: 20px;
    padding: 0 1em;
    color: #FDFDFD;
    font-size: .9em; }
    .date p:before, .date p::after {
      content: '';
      position: absolute; }
    .date p:before {
      width: 15px;
      height: 15px;
      border-radius: 50%;
      background: #FDFDFD;
      left: -3rem;
      top: 50%;
      -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
      transform: translateY(-50%); }
    .date p::after {
      left: -10px;
      top: 0;
      width: 0;
      height: 0;
      border: 10px solid #8ACB82;
      border-left-color: transparent; }
  .date.green p::before {
    background: #8ACB82 !important; }

[class^="icon-"]::before {
  position: relative;
  top: 3px; }

body {
  overflow-x: hidden;
  position: relative;
  width: 100vw;
  height: 100vh; }
  @media screen and (max-width: 1023px) {
    body {
      left: -160px;
      transition: all 0.3s; } }
  @media screen and (min-width: 1024px) {
    body {
      padding-left: 160px; } }
  body.active {
    left: 0; }

.title_page {
  display: block;
  text-align: center;
  font-size: 2em; }
  .title_page span {
    font-size: 2em; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
